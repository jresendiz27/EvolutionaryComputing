-0.75/(1+x**2)-(0.65*x*math.atan(1/x))+0.65
(-4* x**2 - 20*x - 100) + (1 - x)**4
3*x**2+ 12/(x**3) - 5
3*x**4 + x**2 - 2*x + 1
10+x**3-2*x-5*(np.finfo(float).eps)**x
x**2- 10*(np.finfo(float).eps)**(0.1*x)
(10*x**3+3*x**2+5)**2
0.5/math.sqrt(1+x**2)- math.sqrt(1+x**2)*(1-0.5/(1+x**2))+x
(np.finfo(float).eps)**x-x**3
(x**2-1)**3-(2*x-5)**4
(-4*x**2-20*x-100) + (1-x)**4
(x**2+(y+1)**2)*(x**2+(y-1)**2)
(x**2-y)**2+y**2
50*(y-x**2)**2+(2-x)**2
(x+2*y-7)**2+(2*x+y-5)**2
(1.5-x*(1-y))**2+(2.25-x*(1-y**2))**2+(2.625-x*(1-y**3))**2
(10*(x[1]-x[0]**2))**2+(1-x[0])**2+90*(x[3]-x[2]**2)**2+(1-x[2])**2+10*(x[1]+x[3]-2)**2+0.1*(x[1]-x[3]) #4 variables, imposible graficar
(4-2.1*x[0]**2+(x[0]**4)/3)*x[0]**2+x[0]*x[1]+(-4+4*x[1]**2)*x[1]**2
(x[0]+10*x[1])**2+5*(x[2]-x[3])**2+(x[1]-2*x[2])**4+10*(x[0]-x[3])**4 #4 variables
x[0]**2+x[1]**2+x[2]**2 #3 variables
100*(x[0]**2-x[1])**2+(1-x[0])**2
math.floor(x[0])+math.floor(x[1])+math.floor(x[2])+math.floor(x[3])+math.floor(x[4]) #5 variables
#23 - 30 variables
suma = 0
for i in range(1,30):
	suma+= i*x[i-1]**4
return suma + random.gauss(0,1)
#24
a = [[-32,-16,0,16,32,-32,-16,0,16,32,-32,-16,0,16,32,-32,-16,0,16,32,-32,-16,0,16,32], [-32,-32,-32,-32,-32,-16,-16,-16,-16,-16,0,0,0,0,0,16,16,16,16,16,32,32,32,32,32]]

def fitness(x,y):
	superSuma = 0
	for j in range(1,25):
		superSuma += 1/f2(j,x,y)
	return 1/(1/500 + superSuma)

def f2(j,x,y):
	suma = 0
	i = 0
	suma+= (x- a[i][j])**6
	i = 1
	suma+= (y- a[i][j])**6
	return j + suma	